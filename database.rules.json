{
  "rules": {
    ".read": false,
    ".write": false,

    /* システム領域：管理者IDやデバッグ用フラグ等 */
    /* 通常クライアントからは書き込み不可。読み込みは個別に許可 */
    "sys": {
      ".read": false,
      ".write": false,
      /* 管理者ID */
      "adms": {},
      /* クライアント向け公開設定 */
      "public-config" : {
        ".read" : true,
        "sslfallback" : {},
        "sslserver" : {},
        "maintenance" : {},
        "maxreactions" : {},
        "maxmufovisible" : {}
      }
    },

    "logs": {
      "actions": {
        "$year": {
          "$month": {
            "$day": {
              ".read": "root.child('sys/adms/'+auth.uid).exists()",
              ".write": true,
              ".indexOn": [
                "ts",
                "uid",
                "auid",
                "action"
              ],
              "$logid": {
                "ts": {},
                "uid": {},
                "auid": {},
                "action": {},
                "data": {}
              }
            }
          }
        }
      }
    },

    "data": {
      /* MuFo本体データ */
      "mufos": {
        ".read": true,
        ".write": "auth != null",
        ".indexOn":["modified"],
        "$mufoid": {
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          },
          "mufoid": {
            /* IDはキーと同じである事 */
            ".validate": "newData.val() === $mufoid"
          },
          "title": {
            ".validate": "newData.val().length <= 50"
          },
          "color": {
            ".validate": "newData.isNumber()"
          },
          "pattern": {
            ".validate": "newData.isNumber()"
          },
          "location": {
            "$otherkey": {
                /* 未定義のキーは拒否 */
                ".validate": false
            },
            /* 数値である事 */
            "lat": {
                ".validate": "newData.isNumber()"
            },
            "lng": {
                ".validate": "newData.isNumber()"
            }
          },
          "authoruid": {
            /* 投稿者自身のUID以外は登録できない */
            /* 新規書き込みのみ・変更不可 */
            ".validate": "!data.exists() && auth.uid === newData.val()"
          },
          "authorname": {
            ".validate": "newData.val().length <= 50"
          },
          "authoravatar": {
            ".validate": "newData.val().length <= 10" /* n,n,n,n */
          },
          "created": {
            /* タイムスタンプ=数値のみ */
            ".validate": "newData.isNumber()"
          },
          "modified": {
            /* タイムスタンプ=数値のみ */
            ".validate": "newData.isNumber()"
          },
          "songcount": {
            /* 数値のみ */
            ".validate": "newData.isNumber()"
          }
        }
      },


      /* 曲データ */
      "songs": {
        ".read": true,
        ".write": true,
        ".indexOn":[
          "mufoid"
        ],
        "$songid": {
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          },
          "songid": {
            /* IDはキーと同じである事 */
            ".validate": "newData.val() === $songid"
          },
          "mufoid": {
            /* MuFoとの紐付け変更はログイン済みユーザのみ可 */
            /* 存在するMuFoであること */
            ".validate": "auth != null && root.child('/data/mufos/'+newData.val()).exists()"
          },
          "authoruid": {
            /* 投稿者自身のUID以外は登録できない */
            /* 新規書き込みのみ・変更不可 */
            ".validate": "auth != null && !data.exists() && auth.uid === newData.val()"
          },
          "authorname": {
            ".validate": "auth != null && newData.val().length <= 50"
          },
          "authoravatar": {
            ".validate": "auth != null && newData.val().length <= 10" /* n,n,n,n */
          },
          "created": {
            /* タイムスタンプ=数値のみ */
            ".validate": "auth != null && newData.isNumber()"
          },
          "reaction": {
            /* 数値のみ */
            /* 未ログインでもここだけは更新可 */
            ".validate": "newData.isNumber()"
          },
          "songcode": {
            ".validate": "auth != null && newData.val().length <= 50"
          },
          "artistname": {
            ".validate": "auth != null && newData.val().length <= 500"
          },
          "songtitle": {
            ".validate": "auth != null && newData.val().length <= 500"
          },
          "songpreview": {
            /* null相当またはhttp(s)のみ許可 */
            ".validate": "auth != null && (newData.val() === null || newData.val() === '' || newData.val().matches(/^https?:/))"
          },
          "songpurchase": {
            /* null相当またはhttp(s)のみ許可 */
            ".validate": "auth != null && (newData.val() === null || newData.val() === '' || newData.val().matches(/^https?:/))"
          },
          "songthum": {
            /* null相当またはhttp(s)のみ許可。画像かどうかも確認 */
            ".validate": "auth != null && (newData.val() === null || newData.val() === '' || newData.val().matches(/^https?:.*[.](jpg|gif|png)$/i))"
          }
        }
      },


      /* ユーザー */
      "users": {
        "$uid":{
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          },
          "uid": {
            /* 投稿者自身のUID以外は登録できない */
            /* 新規書き込みのみ・変更不可 */
            ".validate": "auth.uid === newData.val() && auth.uid === $uid"
          },
          "name": {
            ".validate": "newData.val().length <= 50"
          },
          "avatar": {
            ".validate": "newData.val().length <= 10" /* n,n,n,n */
          },
          "isinited": {
            /* 一度上げたら下げられない */
            ".validate": "newData.isBoolean() && !(data.val() === false && newData.val() === true)"
          },
          "ispassedtutorial": {
            ".validate": "newData.isBoolean()"
          },
          "registdate": {
            /* タイムスタンプ=数値のみ */
            ".validate": "newData.isNumber()"
          },
          "logindate": {
            /* タイムスタンプ=数値のみ */
            ".validate": "newData.isNumber()"
          }
        }
      },


      /* 通知マスタ */
      "notifs": {
        /* 通知検索キー = type-mufoidまたはsongid */
        "$notifkey":{
          /* 読み込みはフリー */
          ".read": "auth != null",
          /* 書き込みはfunctionsからのみ */
          ".write": false,
          ".indexOn":[
            "notifkey"
          ],
          /* 通知タイプ=[addsong|addreaction] */
          "type":{},
          /* 対象ユーザ（現時点では1通知=1ユーザ） */
          "uid":{},
          /* 通知の更新日 */
          "updated":{},
          /* 通知に関連したMuFoの情報 */
          "mufodata":{},
          /* 通知に関連した曲の情報 */
          "songdata":{}
        }
      },

      /* MuFo招待へのリクエスト */
      "invireqs": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$reqid": {
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          },
          /* リクエストしたユーザー */
          "uid": {
            ".validate": "auth.uid === newData.val()"
          },
          /* リクエスト日時 */
          "requested": {
            /* タイムスタンプ=数値のみ */
            ".validate": "newData.isNumber()"
          },
          /* リクエストに対して作成された招待のid */
          "inviid": {
            ".validate": "newData.val().length <= 50"
          }
        }
      },

      /* MuFoへの招待 */
      "invis": {
        "$inviid": {
          /* 回答以外はクライアントから書き込み不可。読み出しは可 */
          ".read": "auth != null",
          "inviid": {},
          "users": {
              "$uid":{
                ".write": "$uid === auth.uid",
                "answer": {},
                "answered": {}
              }
          },
          /* 招待を発行した日時 */
          "invited": {},
          /* 招待の理由（利用者要求・システム要求・MuFo作成・曲追加...等） */
          "cause": {},
          /* 招待先のMuFoの情報 */
          "mufodata": {}
        }
      }

    },
    "index": {
      /* MuFoの位置情報(Geofire用) */
      "mufo-locations": {
        ".read": true,
        ".write": "auth != null",
        ".indexOn": [
          "g"
        ],
        "$mufoid": {
          "g": {
            ".validate": "newData.val().length < 100"
          },
          "l": {
            "0": {
              ".validate": "newData.isNumber()"
            },
            "1": {
              ".validate": "newData.isNumber()"
            },
            "$otherkey": {
              /* 未定義のキーは拒否 */
              ".validate": false
            }
          },
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          }
        }
      },

      /* ユーザーことの通知インデックス */
      "user-notifs": {
        "$uid": {
          ".read" : "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          ".indexOn":[
            "updated",
            "opened"
          ],
          "$notifid": {
            "$otherkey": {
              /* 未定義のキーは拒否 */
              ".validate": false
            },

            /* この通知の更新日付 */
            "updated": {
              ".validate": "newData.isNumber()"
            },
            /* この通知の既読日付 */
            "opened": {
              ".validate": "newData.isNumber()"
            }
          }
        }
      },

      /* ユーザーごとの招待インデックス */
      "user-invis":{
        "$uid":{
          ".read" : "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          },
          /* 招待のインデックスはユーザーごとに最新の1件のみを保持 */
          "inviid": {
            ".validate": "newData.val().length < 50"
          },
          /* 招待日時 */
          "invited": {
            ".validate": "newData.isNumber()"
          }
        }
      },

      /* ユーザの最終アクセス日時。頻繁に更新されるため、usersデータ本体とは別にする */
      "active-users":{
        ".indexOn": ["actived"],
        "$uid": {
          ".read" : "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          "$otherkey": {
            /* 未定義のキーは拒否 */
            ".validate": false
          },
          "actived": {
            ".validate": "newData.isNumber()"
          },
          "lastinvited": {
            ".validate": "newData.isNumber()"
          },
          "lastinvitedmufoid": {
            ".validate": "newData.val().length < 50"
          }
        }
      }

    }
  }
}
